// Generated by CoffeeScript 1.3.3
(function() {
  var autoPoll, buildFilterURL, constructURL, getSearchQuery, resultsFilter, root, search, submitRequest;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root._cb_findItemsByKeywords = function(ebayResults) {
    var html, item, items, _i, _len;
    items = ebayResults.findItemsByKeywordsResponse[0].searchResult[0].item || [];
    html = [];
    html.push('<table width="100%" border="0" cellspacing="0" cellpadding="3"><tbody>');
    for (_i = 0, _len = items.length; _i < _len; _i++) {
      item = items[_i];
      if ((item.title != null) && (item.viewItemURL != null)) {
        html.push('<tr><td>' + '<img src="' + item.galleryURL + '" border="0">' + '</td>' + '<td><a href="' + item.viewItemURL + '" target="_blank">' + item.title + '</a></td></tr>');
      }
    }
    html.push('</tbody></table>');
    return document.getElementById("results").innerHTML = html.join("");
  };

  document.getElementById("search").onclick = function() {
    return search();
  };

  autoPoll = function(timeDelayInSeconds) {
    if (timeDelayInSeconds == null) {
      timeDelayInSeconds = 600;
    }
    console.log("autoPoll1");
    root.setTimeout(autoPoll, timeDelayInSeconds * 1000);
    search(getSearchQuery());
    return console.log("autoPoll2");
  };

  getSearchQuery = function() {
    return "harry%20potter";
  };

  search = function() {
    var url;
    url = constructURL();
    url += buildFilterURL(resultsFilter);
    return submitRequest(url);
  };

  constructURL = function(searchQuery) {
    if (searchQuery == null) {
      searchQuery = "harry%20potter";
    }
    return "http://svcs.ebay.com/services/search/FindingService/v1\n?OPERATION-NAME=findItemsByKeywords\n&SERVICE-VERSION=1.0.0\n&SECURITY-APPNAME=Jf8f7d060-1456-4fa9-bfc6-ec5d2e1c822\n&GLOBAL-ID=EBAY-US\n&RESPONSE-DATA-FORMAT=JSON\n&callback=_cb_findItemsByKeywords\n&REST-PAYLOAD\n&keywords=" + searchQuery + "\n&paginationInput.entriesPerPage=3";
  };

  resultsFilter = [
    {
      name: "MaxPrice",
      value: "25",
      paramName: "Currency",
      paramValue: "U"
    }, {
      name: "FreeShippingOnly",
      value: "true",
      paramName: "",
      paramValue: ""
    }, {
      name: "ListingType",
      value: ["AuctionWithBIN", "FixedPrice", "StoreInventory"],
      paramName: "",
      paramValue: ""
    }
  ];

  /* 
   * Generates an indexed URL snippet from the array of item filters
   * 
   * @param resultsFilter {array}  item filters to apply to the search results
   * 
   * @param urlFilter {string}  string, of indexed filters, to append to search request URL
  */


  buildFilterURL = function(resultsFilter) {
    var filterItem, index, r, urlFilter, value, _i, _j, _k, _len, _len1, _len2, _ref;
    urlFilter = "";
    for (_i = 0, _len = resultsFilter.length; _i < _len; _i++) {
      filterItem = resultsFilter[_i];
      for (_j = 0, _len1 = filterItem.length; _j < _len1; _j++) {
        index = filterItem[_j];
        if (filterItem[index] !== "") {
          if (filterItem[index] instanceof Array) {
            _ref = itemFilter[index];
            for (r = _k = 0, _len2 = _ref.length; _k < _len2; r = ++_k) {
              value = _ref[r];
              urlFilter += "&itemfilter\(" + i + "\)." + index + "\(" + r + "\)=" + value;
            }
          } else {
            urlFilter += "&itemfilter\(" + i + "\)." + index + "=" + itemFilter[index];
          }
        }
      }
    }
    return urlFilter;
  };

  submitRequest = function(url) {
    var scriptElement;
    scriptElement = document.createElement('script');
    scriptElement.src = url;
    return document.body.appendChild(scriptElement);
  };

  autoPoll(600);

}).call(this);
